# ▼▼▼ Automatically generated by Terra-Crust, PLEASE DON'T EDIT MANUALLY, Please edit {main template/ sub-module variables} if changes are needed :slight_smile: ▼▼▼
locals {
  cert-manager = {
    atomic                = coalesce(var.cert-manager.atomic, true)
    cleanup_on_fail       = coalesce(var.cert-manager.cleanup_on_fail, true)
    create_namespace      = coalesce(var.cert-manager.create_namespace, true)
    docker_image          = coalesce(var.cert-manager.docker_image, "quay.io/jetstack/cert-manager-controller")
    docker_image_acme     = coalesce(var.cert-manager.docker_image_acme, "quay.io/jetstack/cert-manager-acmesolver")
    docker_image_injector = coalesce(var.cert-manager.docker_image_injector, "quay.io/jetstack/cert-manager-cainjector")
    docker_image_startup  = coalesce(var.cert-manager.docker_image_startup, "quay.io/jetstack/cert-manager-startupapicheck")
    docker_image_webhook  = coalesce(var.cert-manager.docker_image_webhook, "quay.io/jetstack/cert-manager-webhook")
    docker_pull_policy    = coalesce(var.cert-manager.docker_pull_policy, "IfNotPresent")
    helm_chart_name       = coalesce(var.cert-manager.helm_chart_name, "cert-manager")
    helm_chart_version    = coalesce(var.cert-manager.helm_chart_version, "1.15.1")
    helm_release_name     = coalesce(var.cert-manager.helm_release_name, "cert-manager")
    helm_repo_url         = coalesce(var.cert-manager.helm_repo_url, "https://charts.jetstack.io")
    namespace             = coalesce(var.cert-manager.namespace, "kube-system")
    timeout               = coalesce(var.cert-manager.timeout, 300)
    wait                  = coalesce(var.cert-manager.wait, true)


  }
  nifi-cluster = {
    atomic             = coalesce(var.nifi-cluster.atomic, true)
    cleanup_on_fail    = coalesce(var.nifi-cluster.cleanup_on_fail, true)
    cluster_name       = coalesce(var.nifi-cluster.cluster_name, "nifi-clsuter")
    create_namespace   = coalesce(var.nifi-cluster.create_namespace, true)
    docker_image       = coalesce(var.nifi-cluster.docker_image, "apache/nifip")
    docker_pull_policy = coalesce(var.nifi-cluster.docker_pull_policy, "IfNotPresent")
    helm_chart_name    = coalesce(var.nifi-cluster.helm_chart_name, "nifikop")
    helm_chart_version = coalesce(var.nifi-cluster.helm_chart_version, "1.9.0")
    helm_release_name  = coalesce(var.nifi-cluster.helm_release_name, "nifikop")
    helm_repo_url      = coalesce(var.nifi-cluster.helm_repo_url, "oci://ghcr.io/konpyutaika/helm-charts/")
    namespace          = coalesce(var.nifi-cluster.namespace, "nifi")
    timeout            = coalesce(var.nifi-cluster.timeout, 300)
    wait               = coalesce(var.nifi-cluster.wait, true)


  }
  nifi-kop = {
    atomic             = coalesce(var.nifi-kop.atomic, true)
    bootstrap_issuers  = coalesce(var.nifi-kop.bootstrap_issuers, true)
    cleanup_on_fail    = coalesce(var.nifi-kop.cleanup_on_fail, true)
    create_namespace   = coalesce(var.nifi-kop.create_namespace, true)
    docker_image       = coalesce(var.nifi-kop.docker_image, "ghcr.io/konpyutaika/docker-images/nifikop")
    docker_pull_policy = coalesce(var.nifi-kop.docker_pull_policy, "IfNotPresent")
    helm_chart_name    = coalesce(var.nifi-kop.helm_chart_name, "nifikop")
    helm_chart_version = coalesce(var.nifi-kop.helm_chart_version, "1.9.0")
    helm_release_name  = coalesce(var.nifi-kop.helm_release_name, "nifikop")
    helm_repo_url      = coalesce(var.nifi-kop.helm_repo_url, "oci://ghcr.io/konpyutaika/helm-charts/")
    namespace          = coalesce(var.nifi-kop.namespace, "nifi")
    timeout            = coalesce(var.nifi-kop.timeout, 300)
    wait               = coalesce(var.nifi-kop.wait, true)


  }
  palworld = {
    atomic             = coalesce(var.palworld.atomic, true)
    cleanup_on_fail    = coalesce(var.palworld.cleanup_on_fail, true)
    create_namespace   = coalesce(var.palworld.create_namespace, true)
    helm_chart_name    = coalesce(var.palworld.helm_chart_name, "palworld")
    helm_chart_version = coalesce(var.palworld.helm_chart_version, "0.2.2")
    helm_release_name  = coalesce(var.palworld.helm_release_name, "palworld")
    helm_repo_url      = coalesce(var.palworld.helm_repo_url, "https://caleb-devops.github.io/helm-charts")
    namespace          = coalesce(var.palworld.namespace, "tailscale")
    timeout            = coalesce(var.palworld.timeout, 300)
    wait               = coalesce(var.palworld.wait, true)


  }
  tailscale = {
    atomic             = coalesce(var.tailscale.atomic, true)
    cleanup_on_fail    = coalesce(var.tailscale.cleanup_on_fail, true)
    create_namespace   = coalesce(var.tailscale.create_namespace, true)
    helm_chart_name    = coalesce(var.tailscale.helm_chart_name, "tailscale-operator")
    helm_chart_version = coalesce(var.tailscale.helm_chart_version, "1.68.1")
    helm_release_name  = coalesce(var.tailscale.helm_release_name, "tailscale-operator")
    helm_repo_url      = coalesce(var.tailscale.helm_repo_url, "https://pkgs.tailscale.com/helmcharts")
    namespace          = coalesce(var.tailscale.namespace, "tailscale")
    timeout            = coalesce(var.tailscale.timeout, 300)
    wait               = coalesce(var.tailscale.wait, true)


  }
}




